{"version":3,"sources":["assets/loading.gif","App.js","index.js"],"names":["navigation","require","App","useState","cities","section","selectedCity","setSelectedCity","underlineWidth","setUnderlineWidth","underlinePosition","setUnderlinePosition","animationTransition","setAnimationTransition","time","setTime","timezoneLocation","setTimezoneLocation","updateUnderline","selectedCityElementPosition","document","getElementById","getBoundingClientRect","width","x","updateLocalTime","fetch","then","res","json","datetime","split","hour","Number","slice","minutes","ampm","formattedTime","useEffect","handleWindowResize","debounce","window","addEventListener","_","removeEventListener","className","map","city","id","onClick","event","newSelectedCity","targetPosition","target","console","log","handleNewCitySelection","label","style","left","src","loadingGif","alt","ReactDOM","render","StrictMode"],"mappings":"2xBAAe,G,YAAA,IAA0B,qC,OCKnCA,EAAaC,EAAQ,IAEZ,SAASC,IACtB,MAAwCC,mBACtCH,EAAWI,OAAO,GAAGC,SADvB,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAA4CJ,mBAAS,OAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAkDN,mBAAS,OAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAAsDR,oBAAS,GAA/D,mBAAOS,EAAP,KAA4BC,EAA5B,KACA,EAAwBV,mBAAS,MAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAgDZ,mBAASH,EAAWI,OAAO,GAAGY,kBAA9E,mBAAOA,EAAP,KAAyBC,EAAzB,KAcMC,EAAkB,WACtB,IAAMC,EAA8BC,SACjCC,eAAef,GACfgB,wBACHb,EAAkBU,EAA4BI,OAC9CZ,EAAqBQ,EAA4BK,IAG7CC,EAAkB,WACzBV,EAAQ,MACRW,MAAM,wCAAD,OAAyCV,IAC7CW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACL,IACMf,EADkBe,EAAKC,SAASC,MAAM,KAAK,GACpBA,MAAM,KAAK,GACpCC,EAAOC,OAAOnB,EAAKoB,MAAM,EAAG,IAC5BC,EAAUF,OAAOnB,EAAKoB,MAAM,EAAG,IAC/BE,EAAO,GAEC,IAATJ,GACFA,EAAO,GACPI,EAAO,MACW,KAATJ,EACTI,EAAO,KACEJ,EAAO,IAChBA,GAAQ,GACRI,EAAO,MAEPA,EAAO,KAER,IAAMC,EAAa,UAAML,EAAN,YAAcG,EAAd,YAAyBC,GAC5CrB,EAAQsB,OAwBT,OApBAC,qBAAU,WACRpB,IACAO,MACC,IAEHa,qBAAU,WACR,IAAMC,EAAqBC,KAAS,WAClCtB,MACC,KAGH,OAFAuB,OAAOC,iBAAiB,SAAUH,GAE3B,SAACI,GACNF,OAAOG,oBAAoB,SAAUL,OAIzCD,qBAAU,WACXb,MACI,CAACT,IAGL,qCACC,0BAAS6B,UAAU,aAAnB,UACC,8BACC,6BACC7C,EAAWI,OAAO0C,KAAI,SAACC,GAAD,OACtB,oBACCF,UAAS,UACRvC,IAAiByC,EAAK1C,QAAU,eAAiB,IAElD2C,GAAID,EAAK1C,QAET4C,QAAS,SAACC,GAAD,OA/EkB,SAACA,EAAOC,GAChCvC,GACHC,GAAuB,GAEzB,IAAMuC,EAAiBF,EAAMG,OAAO/B,wBACpCf,EAAgB4C,EAAgB9C,SACnCiD,QAAQC,IAAI,sBAAuBJ,EAAgBnC,kBACnDC,EAAoBkC,EAAgBnC,kBACjCP,EAAkB2C,EAAe7B,OACjCZ,EAAqByC,EAAe5B,GAsEdgC,CAAuBN,EAAOH,IANnD,SAQEA,EAAKU,OAHDV,EAAK1C,gBAQb,qBACCwC,UAAS,mBAAcjC,EAAsB,cAAgB,IAC7D8C,MAAO,CAAEnC,MAAOf,EAAgBmD,KAAMjD,QAGxC,yBAASmC,UAAU,OAAnB,SACE/B,EACA,4BAAIA,IACJ,qBAAK+B,UAAU,aAAae,IAAKC,EAAYC,IAAI,oBC3GrDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAASC,eAAe,W","file":"static/js/main.7050804a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import { useState, useEffect } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport \"./App.scss\";\nimport _ from \"lodash\";\nimport loadingGif from './assets/loading.gif'\nconst navigation = require(\"./navigation.json\");\n\nexport default function App() {\n  const [selectedCity, setSelectedCity] = useState(\n    navigation.cities[0].section\n  );\n  const [underlineWidth, setUnderlineWidth] = useState(\"0px\");\n  const [underlinePosition, setUnderlinePosition] = useState(\"0px\");\n  const [animationTransition, setAnimationTransition] = useState(false);\n  const [time, setTime] = useState(null);\n  const [timezoneLocation, setTimezoneLocation] = useState(navigation.cities[0].timezoneLocation);\n\n  const handleNewCitySelection = (event, newSelectedCity) => {\n    if (!animationTransition) {\n      setAnimationTransition(true);\n    }\n    const targetPosition = event.target.getBoundingClientRect();\n    setSelectedCity(newSelectedCity.section);\n\tconsole.log(\"setTimezoneLocation\", newSelectedCity.timezoneLocation);\n\tsetTimezoneLocation(newSelectedCity.timezoneLocation);\n    setUnderlineWidth(targetPosition.width);\n    setUnderlinePosition(targetPosition.x);\n  };\n\n  const updateUnderline = () => {\n    const selectedCityElementPosition = document\n      .getElementById(selectedCity)\n      .getBoundingClientRect();\n    setUnderlineWidth(selectedCityElementPosition.width);\n    setUnderlinePosition(selectedCityElementPosition.x);\n  };\n\n  const updateLocalTime = () => {\n\tsetTime(null);\n\tfetch(`http://worldtimeapi.org/api/timezone/${timezoneLocation}`)\n\t.then((res) => res.json())\n\t.then((json) => {\n\t  const longVersionTime = json.datetime.split(\"T\")[1];\n\t  const time = longVersionTime.split(\".\")[0];\n\t  let hour = Number(time.slice(0, 2));\n\t  let minutes = Number(time.slice(3, 5));\n\t  let ampm = \"\";\n\n\t  if(hour === 0) {\n\t\t  hour = 12;\n\t\t  ampm = \"AM\";\n\t  } else if(hour === 12) {\n\t\t  ampm = \"PM\";\n\t  } else if(hour > 12) {\n\t\t  hour -= 12;\n\t\t  ampm = \"PM\";\n\t  } else {\n\t\t  ampm = \"AM\";\n\t  }\n\t  const formattedTime = `${hour}:${minutes} ${ampm}`;\n\t  setTime(formattedTime);\n\t});\n  };\n\n  useEffect(() => {\n    updateUnderline();\n    updateLocalTime();\n  }, []);\n\n  useEffect(() => {\n    const handleWindowResize = debounce(() => {\n      updateUnderline();\n    }, 500);\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    return (_) => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  });\n\n  useEffect(() => {\n\tupdateLocalTime();\n  }, [timezoneLocation]);\n\n  return (\n\t<>\n\t\t<section className=\"navigation\">\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t{navigation.cities.map((city) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\tselectedCity === city.section ? \"selectedCity\" : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tid={city.section}\n\t\t\t\t\t\tkey={city.section}\n\t\t\t\t\t\tonClick={(event) => handleNewCitySelection(event, city)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{city.label}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t\t<div\n\t\t\t\tclassName={`underline${animationTransition ? \" transition\" : \"\"}`}\n\t\t\t\tstyle={{ width: underlineWidth, left: underlinePosition }}\n\t\t\t></div>\n\t\t</section>\n\t\t<section className=\"time\">\n\t\t\t{time ? \n\t\t\t\t<p>{time}</p> : \n\t\t\t\t<img className=\"loadingGif\" src={loadingGif} alt=\"Loading...\" />\n\t\t\t}\n\t\t</section>\n\t</>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}